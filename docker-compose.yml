version: '3'
services:
  agent:
    image: "gcr.io/datadoghq/agent:7.46.0"
    env_file:
      - .env-dd
    environment:
      # - DD_API_KEY
    # add agent env variables
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_DOCKER_LABELS_AS_TAGS={"my.custom.label.team":"team"}
      - DD_TAGS='env:live'
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_HOSTNAME=agent
      - DD_SERVICE_MAPPING="pdo:phpconference-db"
    # add agent trace port
    ports:
      - 127.0.0.1:8126:8126/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - ./datadog/log/:/etc/datadog-agent/conf.d/
      - ./storage/logs/:/phpconference/log/
    # add agent log labels
    labels:
      com.datadoghq.ad.logs: '[{"source": "datadog-agent", "service": "agent"}]'
    networks:
      www_sga:
  web:
    #image: jhousyfran/php7-3_apache
    build: .
    expose:
      - "80/tcp"
      - "443/tcp"
    ports:
      - "8000:80"
      - "443:443"
    environment:
      - DD_AGENT_HOST=agent
      - DD_SERVICE=phpconference
      - DD_ENV=live
      - DD_VERSION=1.0
      - DD_LOGS_INJECTION=true
      - DD_TRACE_SAMPLE_RATE=1
      - DD_TRACE_AGENT_PORT="8126"
      - DD_SERVICE_MAPPING="pdo:phpconference-db"
      - ENVIRONMENT=www_sga
    volumes:
      - ./:/var/www/html
      - ./logs/apache2:/var/log/apache2
      - ./apache2/vhosts:/etc/apache2/from-host
      - ./apache2/certs:/etc/apache2/ssl/from-host
      - ./sites-available:/etc/apache2/sites-available
    labels:
      com.datadoghq.ad.logs: '[{"source": "php", "service": "sga-service"}]'
    depends_on:
      - db
    links:
      - db
    networks:
      www_sga:
#    entrypoint: ["/var/www/html/docker-entrypoint.sh"]
#    tty: true

  db:
    image: mysql:5.7
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_520_ci']
    expose:
      - "3306/tcp"
    ports:
      - "3388:3306"
    environment:
      MYSQL_DATABASE: sga
      MYSQL_USER: local
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
    volumes:
      - ./datadir:/var/lib/mysql
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      www_sga:

  node:
      image: node:11
      command: ['npm', 'dev', '--prefix', '/home/node/app']
      ports: 
        - "3010:3000"
        - "3011:3001"
      working_dir: /home/node/app
      environment:
        NODE_ENV: dev
        WORKDIR: /home/node/app
      volumes:
        - ./:/home/node/app
# docker network create www_sga
networks:
  www_sga:
    external: true
